---
title: "Evaluating 2024 US Presidential Election Predictions"
format: html
editor: visual
code-line-numbers: true
---

## Purpose

In 2021, I used US Presidential election county level data from 1960 - 2020 to predict the outcome of the 2024 US Presidential election. I used a series of Poisson regression models under the tidymodels + modeltime framework.

For reference:

<https://www.tidymodels.org/>

<https://business-science.github.io/modeltime/>

```{r loading_data, include = FALSE, echo = FALSE}
library(readxl)
library(tidyverse)
library(lubridate)
library(timeDate)
library(tidyr)
library(DT)
library(scales)

#-----Load data
url <- "https://raw.githubusercontent.com/statzenthusiast921/US_Elections_Project/refs/heads/main/Data/compare2024.csv"
df <- read_csv(url, show_col_types = FALSE) |>
  mutate(
    fips_code_lz = case_when(
      length(fips_code_lz) == 4 ~ as.character(paste0('0', as.character(fips_code_lz))),
      TRUE ~ as.character(fips_code_lz)
    )
  )
```

```{r fix_a_few_state_numbers, include = FALSE, echo = FALSE}
#----- Add in missing data (Connecticut, DC, good chunk of Virginia)
CT <- data.frame(
  state_name = rep('Connecticut', 8), 
  county_name = c('Fairfield County', 'Hartford County', 'Litchfield County', 
                  'Middlesex County', 'New Haven County', 'New London', 
                  'Tolland County', 'Windham County'),
  fips_code_lz = c('09001','09003','09005','09007','09009','09011','09013','09015'),
  dem_votes_actuals = c(267019,259366,47940,54173,218981,76190,43311,25073),
  dem_votes_preds = c(264185.234, 268797.8,46268.6935,58758.8975,226382.274, 76679.459, 48004.6578, 23254.8234),
  gop_votes_actuals = c(178263,162572,56452,41654,171435,58858,36773,30911),
  gop_votes_preds = c(195603.214,142487.195,58026.9283,40798.4047,154586.184,54107.9996, 39271.5273, 29948.0548)
)

DC <- data.frame(
  state_name = 'District of Columbia',
  county_name = 'District of Columbia',
  fips_code_lz = '11001',
  dem_votes_actuals = 294185,
  dem_votes_preds = 328732.739,
  gop_votes_actuals = 21076,
  gop_votes_preds = 20859.1042
)




#----- 1/15 : Alabama


AL_extra <- data.frame(
  state_name = 'Alabama',
  county_name = 'St. Clair County',
  fips_code_lz = '01115',
  dem_votes_actuals = 7640,
  dem_votes_preds = 8639.206303,
  gop_votes_actuals = 35501,
  gop_votes_preds = 45378.49691
)


#----- 2/15 : Arkansas
AR_extra <- data.frame(
  state_name = 'Arkansas',
  county_name = 'St. Francis County',
  fips_code_lz = '05123',
  dem_votes_actuals = 2953,
  dem_votes_preds = 4643.70718,
  gop_votes_actuals = 2909,
  gop_votes_preds = 3734.56694
)

#----- 3/15: Florida
FL_extra <- data.frame(
  state_name = rep('Florida', 2), 
  county_name = c('St. Johns County','St. Lucie County'),
  fips_code_lz = c('12109','12111'),
  dem_votes_actuals = c(66862,83517),
  dem_votes_preds = c(75160.80636,101087.6594),
  gop_votes_actuals = c(128759,100293),
  gop_votes_preds = c(139209.3109,99535.21287)
)

#----- 4/15: Illinois

IL_extra <- data.frame(
  state_name = 'Illinois',
  county_name = 'St. Clair County',
  fips_code_lz = '17163',
  dem_votes_actuals = 63433,
  dem_votes_preds = 63814.72433,
  gop_votes_actuals = 54021,
  gop_votes_preds = 53689.53059
)


#----- 5/15 : Indiana

IN_extra <- data.frame(
  state_name = 'Indiana',
  county_name = 'St. Joseph County',
  fips_code_lz = '18141',
  dem_votes_actuals = 55215,
  dem_votes_preds = 56788.44996,
  gop_votes_actuals = 53585,
  gop_votes_preds = 49362.51955
)


#----- 6/15 : Louisana
LA_extra <- data.frame(
  state_name = rep('Louisiana',9),
  county_name = c('St. Bernard County','St. Charles County','St. Helena County','St. James County','St. John the Baptist County','St. Landry County','St. Martin County','St. Mary County','St. Tammany County'),
  fips_code_lz = c('22087', '22089', '22091',
                   '22093', '22095', '22097',
                   '22099', '22101', '22103'),
  dem_votes_actuals = c(5967,8812,2848,5792,12043,14833,7284,7011,37777),
  dem_votes_preds = c(8618.739,11289.98286
,3906.330368,7261.802411,16162.17334,21338.55504
,10864.07438,9980.476712,49613.08223),
  gop_votes_actuals = c(11033,17443,2804,5902,6557,21812,17466,13671,98377),
  gop_votes_preds = c(14465.86816,22710.8027,3529.955385,7514.118394,9775.96829,
22918.86541,20454.26882,15696.39672,127539.8166)
)


#---- 7/15 : Maryland
MD_extra <- data.frame(
  state_name = rep('Maryland',2),
  county_name = c("St. Mary's County",'Baltimore City'),
  fips_code_lz = c('24037','24510'),
  dem_votes_actuals = c(23531,195019),
  dem_votes_preds = c(27239.16014,186955.2961),
  gop_votes_actuals = c(33582,27984),
  gop_votes_preds = c(35539.75235,18209.2131)
)


#----- 8/15 :Michigan
MI_extra<- data.frame(
  state_name = rep('Michigan',2),
  county_name = c('St. Clair County', 'St. Joseph County'),
  fips_code_lz = c('26147','26149'),
  dem_votes_actuals = c(30844, 9452),
  dem_votes_preds = c(29331.6804,9138.110437),
  gop_votes_actuals = c(64277, 19403),
  gop_votes_preds = c(60810.76941,18365.26587)
)


#----- 9/15 : Minnesota
MN_extra <- data.frame(
  state_name = 'Minnesota',
  county_name = 'St. Louis County',
  fips_code_lz = '27137',
  dem_votes_actuals = 66335,
  dem_votes_preds = 63678.66115,
  gop_votes_actuals = 50065,
  gop_votes_preds = 45597.56393
)

#----- 10/15 : Missouri
MO_extra<- data.frame(
  state_name = rep('Missouri',5),
  county_name = c('St. Charles County','St. Clair County','St. Francois County','St. Louis County','St. Louis City'),
  fips_code_lz = c('29183','29185','29187','29189','29510'),
  dem_votes_actuals = c(92226,959,6811,305635,94458),
  dem_votes_preds = c(124684.9447,1022.221202,7033.438233,340591.4234,97433.91076),
  gop_votes_actuals = c(130588, 3982, 21521,187982,19342),
  gop_votes_preds = c(161182.554,3958.179186,20437.18336,245720.7415, 14425.04512)
)


#----- 11/15 : New Mexico
NM_extra <- data.frame(
  state_name = 'New Mexico',
  county_name = 'Dona Ana',
  fips_code_lz = '35013',
  dem_votes_actuals = 45937,
  dem_votes_preds = 53107.34737,
  gop_votes_actuals = 37594,
  gop_votes_preds = 36483.5287
)


#----- 12/15 : New York
NY_extra <- data.frame(
  state_name = 'New York',
  county_name = 'St. Lawrence County',
  fips_code_lz = '36089',
  dem_votes_actuals = 18010,
  dem_votes_preds = 16284.97439,
  gop_votes_actuals = 25919,
  gop_votes_preds = 22961.68393
)

#----- 13/15 : Oregon
OR <- df |> filter(state_name == "Oregon")
OR_extra <- data.frame(
  state_name = rep('Oregon',36),
  county_name = OR$county_name,
  fips_code_lz = OR$fips_code_lz,
  dem_votes_actuals = c(2343,33909,130580,12533,12895,13731,3836,
                        5737,68108,18386,291,816,797,8364,54065,
                        3941,16928,9856,681,125775,17112,25749,
                        2884,73970,1138,325927,22034,233,7747,9251,
                        4107,1573,6069,193013,210,26011),
  dem_votes_preds = c(2214.976993,39089.70426,148193.95,11415.22757,
                      13168.07474,13447.06186,3605.145289,6096.691129,
                      76267.44443,18881.36374,278.0755228,792.1184672,
                      733.6294546,9068.86091,60609.37625,4237.389219,
                      19520.13056,8748.578329,703.0822354,138629.9974,
                      17551.65401,24605.29266,2749.204462,83573.66953,
                      1400.323494,378330.8357,23431.42235,234.8819434,
                      7388.286243,9431.19506,4093.85686,1469.604347,
                      5626.386225,227186.5202,178.4670141,28048.82926),
  gop_votes_actuals = c(7060,14187,106387,9913,17227,20849,12012,8000,
                        54850,41561,805,3490,3307,3854,61743,7454,31129,
                        24675,3421,77376,11645,43078,7710,77089,3408,
                        70759,23768,890,7971,20973,9942,3366,6837,92590,
                        618,29536),
  gop_votes_preds = c(7501.829911,15805.4855,126840.4284,8533.955188,
                      16763.01113,19484.17759,12462.8665,9151.241419,
                      64945.96317,45669.24439,780.0184078,3484.577925,
                      3434.774739,3967.096067,65683.65848,7571.559481,
                      35226.84311,25040.26808,3519.393366,77941.77483,
                      11964.84062,43581.85267,7752.288646,75111.68495,
                      3768.872099,65413.21963,22919.7495,898.3407992,
                      8259.690314,21045.23251,10499.03135,3294.686113,
                      6419.57654,103133.2844,669.6958205,29025.40086)
)


#----- 14/15 : Wisconsin
WI_extra <- data.frame(
  state_name = 'Wisconsin',
  county_name = 'St. Croix County',
  fips_code_lz = '55109',
  dem_votes_actuals = 23870,
  dem_votes_preds = 24056.83562,
  gop_votes_actuals = 35537,
  gop_votes_preds = 33635.54492
)


#----- 15/15: Virginia
va_actuals <- readxl::read_excel('/Users/jonzimmerman/Desktop/va_totals2024.xlsx') |>
  mutate(
    county_name = case_when(
      grepl('city',county_name, ignore.case=TRUE) ~ county_name,
      TRUE ~ paste0(county_name, ' County')
    ),
    county_name = case_when(
      county_name == "Winchester County" ~ "Winchester City",
      county_name == "Williamsburg County" ~ "Williamsburg City",
      county_name == "Waynesboro County" ~ "Waynesboro City",
      county_name == "Virginia Beach County" ~ "Virginia Beach City",
      county_name == "Suffolk County" ~ "Suffolk City",
      county_name == "Staunton County" ~ "Staunton City",
      county_name == "Salem County" ~ "Salem City",
      county_name == "Radford County" ~ "Radford City",
      county_name == "Portsmouth County" ~ "Portsmouth City",
      county_name == "Poquoson County" ~ "Poquoson City",
      county_name == "Petersburg County" ~ "Petersburg City",
      county_name == "Norton County" ~ "Norton City",
      county_name == "Norfolk County" ~ "Norfolk City",
      county_name == "Newport News County" ~ "Newport News City",
      county_name == "Martinsville County" ~ "Martinsville City",
      county_name == "Manassas Park County" ~ "Manassas Park City",
      county_name == "Manassas County" ~ "Manassas City",
      county_name == "Lynchburg County" ~ "Lynchburg City",
      county_name == "Lexington County" ~ "Lexington City",
      county_name == "Hopewell County" ~ "Hopewell City",
      county_name == "Harrisonburg County" ~ "Harrisonburg City",
      county_name == "Hampton County" ~ "Hampton City",
      county_name == "Galax County" ~ "Galax City",
      county_name == "Fredericksburg County" ~ "Fredericksburg City",
      county_name == "Franklin County" ~ "Franklin City",
      county_name == "Falls Church County" ~ "Falls Church City",
      county_name == "Fairfax County" ~ "Fairfax City",
      county_name == "Emporia County" ~ "Emporia City",
      county_name == "Danville County" ~ "Danville City",
      county_name == "Covington County" ~ "Covington City",
      county_name == "Colonial Heights County" ~ "Colonial Heights City",
      county_name == "Chesapeake County" ~ "Chesapeake City",
      county_name == "Charlottesville County" ~ "Charlottesville City",
      county_name == "Buena Vista County" ~ "Buena Vista City",
      county_name == "Bristol County" ~ "Bristol City",
      county_name == "Bedford County" ~ "Bedford City",
      county_name == "Alexandria County" ~ "Alexandria City",
      TRUE ~ county_name
    )
  )

va_preds <- read_csv('/Users/jonzimmerman/Desktop/preds_2024_df.csv') |> 
  filter(state_name == "Virginia") |>
  select(state_name, county_name, gop_votes_preds = gop_votes, dem_votes_preds = dem_votes) |>
  mutate(
    county_name = case_when(
      county_name == "Charles City County" ~ "Charles City",
      county_name == "James City County" ~ "James City",

      TRUE ~county_name
    )
  )

VA_extra <- left_join(
  va_preds,
  va_actuals,
  by = c('county_name')
) |>
  mutate(fips_code_lz = '99999') |>
  relocate(fips_code_lz, .after = county_name) |>
  relocate(dem_votes_actual, .after= fips_code_lz) |>
  relocate(dem_votes_preds, .after = dem_votes_actual) |>
  relocate(gop_votes_actual, .after = dem_votes_preds) |>
  rename(
    dem_votes_actuals = dem_votes_actual,
    gop_votes_actuals = gop_votes_actual
  )


VA_extra2 <- VA_extra |>
  filter(!county_name %in% c("Bedford County")) |>
  mutate(
    dem_votes_actuals = case_when(
      county_name == "Fairfax County" ~ 386438,
      county_name == "Franklin County" ~ 8321,
      TRUE ~ dem_votes_actuals
    ),
    gop_votes_actuals = case_when(
      county_name == "Fairfax County" ~ 181895,
      county_name == "Franklin County" ~ 22319,

      TRUE ~ gop_votes_actuals
    ),
  ) |>
  filter(!(county_name == "Fairfax City" & dem_votes_actuals > 10000)) |>
  filter(!(county_name == "Franklin City" & dem_votes_actuals > 8000))
  
test <- VA_extra2 |> filter(is.na(gop_votes_actuals))

#----- Add in the extra counties
df <- df |> 
  filter(!state_name == "Oregon") |>
  filter(!state_name == "Virginia")


df <- df |> rbind(CT, DC, AL_extra, AR_extra, FL_extra, IL_extra, 
                  IN_extra, LA_extra, MD_extra, MI_extra, MN_extra, 
                  MO_extra, NM_extra, NY_extra, WI_extra, OR_extra,
                  VA_extra2)

```

```{r check_totals, include = FALSE}

check_totals <- df |>
  group_by(state_name) |>
  summarise(
    gop = sum(gop_votes_actuals, na.rm=TRUE),
    dem = sum(dem_votes_actuals, na.rm=TRUE)
  )

```

```{r preprocess, include = FALSE, echo = FALSE}
#----- Create extra columns
df <- df |>
  mutate(
    dem_diff = dem_votes_actuals - dem_votes_preds,
    dem_perc_diff = dem_diff / dem_votes_preds,
    gop_diff = gop_votes_actuals - gop_votes_preds,
    gop_perc_diff = gop_diff / gop_votes_preds,
  )


overall_results <- df |>
  summarise(
    dem_votes_actuals = sum(dem_votes_actuals),
    gop_votes_actuals = sum(gop_votes_actuals),
    dem_votes_preds = sum(dem_votes_preds),
    gop_votes_preds = sum(gop_votes_preds),
    
  ) 

fill_in_values <- c(
  pull(overall_results[1]),
  pull(overall_results[3]),  
  pull(overall_results[2]), 
  pull(overall_results[4])
)

matrix <- matrix(fill_in_values, nrow = 2, byrow = TRUE)

#----- Convert to a data frame
comparison <- as.data.frame(matrix) |> cbind(c('DEM','GOP'))
colnames(comparison) <- c('Actuals','Predictions','Grouping')

```

## Overall Performance

```{r performance, echo = FALSE}
comparison <- comparison |>
  relocate(Grouping, .before = Actuals) |>
  relocate(Predictions, .before = Actuals) |>
  mutate(
    Difference = round(Actuals - Predictions,0),
    PercDifference = Difference / Predictions,
    Predictions = round(Predictions,0)
    )

margin_row <- data.frame(
  Grouping = 'Margin',
  Predictions = comparison$Predictions[1] - comparison$Predictions[2],
  Actuals = comparison$Actuals[1] - comparison$Actuals[2],
  Difference = comparison$Diff[1] - comparison$Diff[2],
  PercDifference = NA_real_
  )

comparison_table <- rbind(comparison, margin_row) |>
  mutate(
    PercDifference = case_when(
      is.na(PercDifference) ~ Difference / Predictions,
      TRUE ~ PercDifference
      )
    ) |>
  rename(`% Difference` = PercDifference)

datatable(
  comparison_table, 
  options = list(dom = 't'),

     caption = htmltools::tags$caption(
            style = 'caption-side: top; font-size: 20px; font-weight: bold;', 
            'Overall 2024 Performance'
          ),
) |>
 formatStyle(
    columns = 1:3,  
    background = styleInterval(1, c("white", "white")),
    fontWeight = styleInterval(1, c("normal", "normal")),
    color = styleInterval(1, c("black", "black"))
  ) |>
  formatCurrency(
    columns = 2:4,  
    currency = "",   
    digits = 0
  ) |>
   formatPercentage(
    columns = 5,  
    digits = 2  
  ) |>
  formatStyle(
    columns = c("Difference","% Difference"),  
    color = styleInterval(0, c("red", "green"))  
  )
```

## State Level Performance

```{r state_level_peformance, include = FALSE}
#Missing Alaska
state_df <- df |>
  group_by(state_name) |>
  summarise(
    dem_votes_actuals = sum(dem_votes_actuals),
    dem_votes_preds = sum(dem_votes_preds),
    gop_votes_actuals = sum(gop_votes_actuals),
    gop_votes_preds = sum(gop_votes_preds)
  ) |>
  mutate(
    dem_diff = dem_votes_actuals - dem_votes_preds,
    dem_perc_diff = dem_diff / dem_votes_preds,
    gop_diff = gop_votes_actuals - gop_votes_preds,
    gop_perc_diff = gop_diff / gop_votes_preds,
    margin_actual = dem_votes_actuals - gop_votes_actuals,
    margin_pred = dem_votes_preds - gop_votes_preds,
    margin_diff = margin_actual - margin_pred,
    margin_perc_diff = margin_diff / margin_pred,
    state_winner = case_when(
      dem_votes_actuals > gop_votes_actuals ~ "DEM",
      TRUE ~ "GOP"
    )
  )
  
rownames(state_df)
state_check <- state_df |> select(state_name, dem_votes_actuals, gop_votes_actuals)
```

```{r make_tables_by_party, echo=FALSE, include = FALSE}

state_dem <- state_df |>
  select(state_name, dem_votes_actuals, dem_votes_preds, dem_diff, dem_perc_diff, state_winner) |>
  mutate(
    abs_perc_diff = abs(dem_perc_diff)
  ) |>
  rename(
    State = state_name,
    Actuals = dem_votes_actuals,
    Predictions = dem_votes_preds,
    Difference = dem_diff,
    `% Difference` = dem_perc_diff,
    `Abs % Difference` = abs_perc_diff,
    `State Winner` = state_winner
  )

state_gop <- state_df |>
  select(state_name, gop_votes_actuals, gop_votes_preds, gop_diff, gop_perc_diff, state_winner) |>
  mutate(
    abs_perc_diff = abs(gop_perc_diff)
  ) |>
  rename(
    State = state_name,
    Actuals = gop_votes_actuals,
    Predictions = gop_votes_preds,
    Difference = gop_diff,
    `% Difference` = gop_perc_diff,
    `Abs % Difference` = abs_perc_diff,
    `State Winner` = state_winner
  )
  
state_margin <- state_df |>
  select(state_name, margin_actual, margin_pred, margin_diff, margin_perc_diff, state_winner) |>
  mutate(
    abs_perc_diff = abs(margin_perc_diff)
  ) |>
   rename(
    State = state_name,
    `Actual Margin` = margin_actual,
    `Predicted Margin` = margin_pred,
    `Margin Difference` = margin_diff,
    `% Difference` = margin_perc_diff,
    `Abs % Difference` = abs_perc_diff,
    `State Winner` = state_winner
  )
  

```

```{r state_table_dem, echo = FALSE}

datatable(state_dem |> select(-c(`State Winner`)), 
          caption = htmltools::tags$caption(
            style = 'caption-side: top; font-size: 20px; font-weight: bold;', 
            'Statewide 2024 Democratic Performance'
          ),
          options = list(
            dom = 'tp',        
            order = list(list(6, "asc")),
            scrollX = TRUE, 
            columnDefs = list(list(targets = "_all", visible = TRUE)),
            pageLength = 10
          )
        )|>
 formatStyle(
    columns = 1:ncol(state_dem),
    background = styleInterval(1, c("white", "white")),
    fontWeight = styleInterval(1, c("normal", "normal")),
    color = styleInterval(1, c("black", "black"))
  ) |>
  formatCurrency(
    columns = 2:4,
    currency = "",
    digits = 0
  ) |>
   formatPercentage(
    columns =c(5,6),
    digits = 2
  ) |>
  formatStyle(
    columns = c("Difference","% Difference"),  
    color = styleInterval(0, c("red", "green"))  
  )


```

```{r dem_scatterplot, echo = FALSE, message = FALSE, warning = FALSE}

plotly::ggplotly(
  ggplot(state_dem, aes(x = Predictions, y = Actuals, color = `State Winner`)) + 
    geom_point(aes(text = paste("State:", State, 
                                "<br>Actuals:", scales::comma(Actuals), 
                                "<br>Predictions:", scales::comma(Predictions)))) +
    scale_color_manual(values = c("DEM" = "blue", "GOP" = "red")) +
    scale_x_continuous(labels = scales::label_number(scale = 1e-6, suffix = "M")) +
    scale_y_continuous(labels = scales::label_number(scale = 1e-6, suffix = "M")) +
    ggtitle('DEM 2024 Votes: Actuals vs. Predictions') +
    geom_smooth(aes(group = 1), method = "loess", color = "black", se=FALSE, linetype = 'dashed')
,tooltip = "text") |>
  plotly::layout(
    title = list(text = "2024 DEM Actuals vs. Predicted Vote Margin",  x = 0.5, xanchor = "center"),
    legend = list(orientation = "h", x = 0.5, y = -0.2, xanchor = "center"))


```

```{r state_table_gop, echo = FALSE}
datatable(state_gop |> select(-c(`State Winner`)), 
          caption = htmltools::tags$caption(
            style = 'caption-side: top; font-size: 20px; font-weight: bold;', 
            'Statewide 2024 Republican Performance'
          ),
          options = list(
            dom = 'tp', 
            order = list(list(6, "asc")),
            scrollX = TRUE, 
            columnDefs = list(list(targets = "_all", visible = TRUE)),
            pageLength = 10  
          )
        )|>

 formatStyle(
    columns = 1:ncol(state_gop),
    background = styleInterval(1, c("white", "white")),
    fontWeight = styleInterval(1, c("normal", "normal")),
    color = styleInterval(1, c("black", "black"))
  ) |>
  formatCurrency(
    columns = 2:4,
    currency = "",
    digits = 0
  ) |>
   formatPercentage(
    columns = c(5,6),
    digits = 2
  ) |>
  formatStyle(
    columns = c("Difference", "% Difference"),  
    color = styleInterval(0, c("red", "green"))  
  )

```

```{r gop_scatterplot, echo = FALSE, message = FALSE, warning = FALSE}
plotly::ggplotly(
  ggplot(state_gop, aes(x = Predictions, y = Actuals, color = `State Winner`)) + 
    geom_point(aes(text = paste("State:", State, 
                                "<br>Actuals:", scales::comma(Actuals), 
                                "<br>Predictions:", scales::comma(Predictions)))) +
    scale_color_manual(values = c("DEM" = "blue", "GOP" = "red")) +
    scale_x_continuous(labels = scales::label_number(scale = 1e-6, suffix = "M")) +
    scale_y_continuous(labels = scales::label_number(scale = 1e-6, suffix = "M")) +
    geom_smooth(aes(group = 1), method = "loess", color = "black", se=FALSE, linetype = 'dashed')
,tooltip = "text") |>
  plotly::layout(
    title = list(text = "GOP 2024 Actuals vs. Predicted Vote Margin",  x = 0.5, xanchor = "center"),
    legend = list(orientation = "h", x = 0.5, y = -0.2, xanchor = "center"))

```

```{r margin_performance, echo = FALSE}
datatable(state_margin |> select(-c(`State Winner`)), 
          caption = htmltools::tags$caption(
            style = 'caption-side: top; font-size: 20px; font-weight: bold;', 
            'Statewide 2024 Performance'
          ),
          options = list(
            dom = 'tp', 
            order = list(list(6, "asc")),
            scrollX = TRUE, 
            columnDefs = list(list(targets = "_all", visible = TRUE)),
            pageLength = 10 
          )
        )|>
 formatStyle(
    columns = 1:ncol(state_margin),
    background = styleInterval(1, c("white", "white")),
    fontWeight = styleInterval(1, c("normal", "normal")),
    color = styleInterval(1, c("black", "black"))
  ) |>
  formatCurrency(
    columns = c(2:4),
    currency = "",
    digits = 0
  ) |>
   formatPercentage(
    columns = c(5:6),
    digits = 2
  ) |>
  formatStyle(
    columns = c("Actual Margin","Predicted Margin","Margin Difference","% Difference"),  
    color = styleInterval(0, c("red", "green"))  
  )

```

The most consequential states in determining the election were Arizona, Michigan, Nevada, Pennsylvania, and Wisconsin. All 5 states were predicted to have a positive margin (ie: DEM \> GOP), but came in with a negative margin. This is displayed in the bottom right quadrant.

```{r margin_scatterplot, echo = FALSE, message = FALSE, warning = FALSE}

plotly::ggplotly(
  ggplot(
    state_margin, aes(x = `Predicted Margin`, y = `Actual Margin`, color = `State Winner`)) +
    geom_point(aes(text = paste("State:", State, 
                                "<br>Actual Margin:", scales::comma(`Actual Margin`), 
                                "<br>Predicted Margin:", scales::comma(`Predicted Margin`)))) +
  geom_vline(xintercept = 0, linetype = "dashed") + 
    geom_hline(yintercept = 0, linetype = "dashed") +
    scale_color_manual(values = c("DEM" = "blue", "GOP" = "red")) +
    ggtitle('2024 Actuals vs. Predicted Vote Margin')  +
    scale_x_continuous(labels = label_number(scale = 1e-6, suffix = "M")) +
    scale_y_continuous(labels = label_number(scale = 1e-6, suffix = "M")) +
    labs(color = "State Winner") 

, tooltip = 'text') |>
  plotly::layout(
    title = list(text = "2024 Actuals vs. Predicted Vote Margin",  x = 0.5, xanchor = "center"),
    legend = list(orientation = "h", x = 0.5, xanchor = "center", y = -0.2))





```

## County Level Performance for swing states

```{r arizona_counties, include = FALSE}

create_base_df <- function(state){
  base_df <- df |>
    filter(state_name == state) |>
    group_by(county_name) |>
    summarise(
      dem_votes_actuals = sum(dem_votes_actuals),
      dem_votes_preds = sum(dem_votes_preds),
      gop_votes_actuals = sum(gop_votes_actuals),
      gop_votes_preds = sum(gop_votes_preds)
    ) |>
    mutate(
      dem_diff = dem_votes_actuals - dem_votes_preds,
      dem_perc_diff = dem_diff / dem_votes_preds,
      gop_diff = gop_votes_actuals - gop_votes_preds,
      gop_perc_diff = gop_diff / gop_votes_preds,
      margin_actual = dem_votes_actuals - gop_votes_actuals,
      margin_pred = dem_votes_preds - gop_votes_preds,
      margin_diff = margin_actual - margin_pred,
      margin_perc_diff = margin_diff / margin_pred,
      state_winner = case_when(
        dem_votes_actuals > gop_votes_actuals ~ "DEM",
        TRUE ~ "GOP"
      )
    )
  
  return(base_df)
  
}

arizona_df <- create_base_df('Arizona')


create_party_county_df <- function(party, data){
  if (party == "DEM"){
    state_dem <- data |>
      select(county_name, dem_votes_actuals, dem_votes_preds, dem_diff, dem_perc_diff, state_winner) |>
      mutate(abs_perc_diff = abs(dem_perc_diff)) |>
      rename(
        County = county_name,
        Actuals = dem_votes_actuals,
        Predictions = dem_votes_preds,
        Difference = dem_diff,
        `% Difference` = dem_perc_diff,
        `Abs % Difference` = abs_perc_diff,
        `State Winner` = state_winner
      )
  return(state_dem)

  }
  else if (party == "GOP"){
    state_gop <- data |>
      select(county_name, gop_votes_actuals, gop_votes_preds, gop_diff, gop_perc_diff, state_winner) |>
      mutate(abs_perc_diff = abs(gop_perc_diff)) |>
      rename(
        County = county_name,
        Actuals = gop_votes_actuals,
        Predictions = gop_votes_preds,
        Difference = gop_diff,
        `% Difference` = gop_perc_diff,
        `Abs % Difference` = abs_perc_diff,
        `State Winner` = state_winner
      )
    return(state_gop)

  }
  else{
    stop("You must select either 'DEM' or 'GOP' for the first argument.") 
  }
}
 
arizona_dem <- create_party_county_df('DEM', arizona_df)
arizona_gop <- create_party_county_df('GOP', arizona_df)

```

All counties in Arizona underperformed their Democratic vote predictions. The worst miss was Maricopa County with a difference of -231K (-19.11%) from actuals to predictions.

```{r arizona_table_dem, echo=FALSE}
datatable(arizona_dem |> select(-c(`State Winner`)), 
          caption = htmltools::tags$caption(
            style = 'caption-side: top; font-size: 20px; font-weight: bold;', 
            ' Arizona DEM 2024 Performance by County'
          ),
          options = list(
            dom = 'tp', 
            order = list(list(6, "asc")),
            scrollX = TRUE, 
            columnDefs = list(list(targets = "_all", visible = TRUE)),
            pageLength = 10  
          )
        )|>

 formatStyle(
    columns = 1:ncol(arizona_dem),
    background = styleInterval(1, c("white", "white")),
    fontWeight = styleInterval(1, c("normal", "normal")),
    color = styleInterval(1, c("black", "black"))
  ) |>
  formatCurrency(
    columns = 2:4,
    currency = "",
    digits = 0
  ) |>
   formatPercentage(
    columns = c(5,6),
    digits = 2
  ) |>
  formatStyle(
    columns = c("Difference", "% Difference"),  
    color = styleInterval(0, c("red", "green"))  
  )


```

The Republican vote overperformed 8 county predictions, while underperforming 7 county predictions. The biggest miss was also Maricopa county, but only by -63K (-5.69%).

```{r arizona_gop_table, echo = FALSE}
datatable(arizona_gop |> select(-c(`State Winner`)), 
          caption = htmltools::tags$caption(
            style = 'caption-side: top; font-size: 20px; font-weight: bold;', 
            ' Arizona GOP 2024 Performance by County'
          ),
          options = list(
            dom = 'tp', 
            order = list(list(6, "asc")),
            scrollX = TRUE, 
            columnDefs = list(list(targets = "_all", visible = TRUE)),
            pageLength = 10  
          )
        )|>

 formatStyle(
    columns = 1:ncol(arizona_gop),
    background = styleInterval(1, c("white", "white")),
    fontWeight = styleInterval(1, c("normal", "normal")),
    color = styleInterval(1, c("black", "black"))
  ) |>
  formatCurrency(
    columns = 2:4,
    currency = "",
    digits = 0
  ) |>
   formatPercentage(
    columns = c(5,6),
    digits = 2
  ) |>
  formatStyle(
    columns = c("Difference", "% Difference"),  
    color = styleInterval(0, c("red", "green"))  
  )

```

Maricopa County was the only county predicted to have a majority of Democratic votes, but resulted in a Republican victory with actual turnout. This county was one of the consequential misses of the entire forecast with a swing of nearly 168K votes from predictions to actuals.

```{r arizona_scatterplot, echo = FALSE, message = FALSE, warning = FALSE}

plotly::ggplotly(
  ggplot(
    arizona_df, aes(x = margin_pred, y = margin_actual, color = state_winner)) +
    geom_point(aes(text = paste("County:", county_name, 
                                "<br>Actual Margin:", scales::comma(margin_actual), 
                                "<br>Predicted Margin:", scales::comma(margin_pred)))) +
  geom_vline(xintercept = 0, linetype = "dashed") + 
    geom_hline(yintercept = 0, linetype = "dashed") +
    scale_color_manual(values = c("DEM" = "blue", "GOP" = "red")) +
    ggtitle('2024 Actuals vs. Predicted Vote Margin')  +
    scale_x_continuous(labels = label_number(scale = 1e-3, suffix = "K")) +
    scale_y_continuous(labels = label_number(scale = 1e-3, suffix = "K")) +
    xlab('Predicted Margin') + ylab('Actual Margin') +
    labs(color = "State Winner") 

, tooltip = 'text') |>
  plotly::layout(
    title = list(text = "2024 Arizona Actuals vs. Predicted Vote Margin by County",  x = 0.5, xanchor = "center"),
    legend = list(orientation = "h", x = 0.5, xanchor = "center", y = -0.2))



```

```{r michigan_counties, include = FALSE}

michigan_df <- create_base_df('Michigan')
michigan_dem <- create_party_county_df('DEM', michigan_df)
michigan_gop <- create_party_county_df('GOP', michigan_df)
```

The biggest county-level prediction miss for Democrats was in Washtenaw County with a difference of -15K (-8.75%). Their biggest vote gain was in Wayne County with a difference of 6K votes (1.15%) between actuals and predictions.

```{r michigan_table_dem, echo=FALSE}
datatable(michigan_dem |> select(-c(`State Winner`)), 
          caption = htmltools::tags$caption(
            style = 'caption-side: top; font-size: 20px; font-weight: bold;', 
            ' Michigan DEM 2024 Performance by County'
          ),
          options = list(
            dom = 'tp', 
            order = list(list(6, "asc")),
            scrollX = TRUE, 
            columnDefs = list(list(targets = "_all", visible = TRUE)),
            pageLength = 10 
          )
        )|>

 formatStyle(
    columns = 1:ncol(michigan_dem),
    background = styleInterval(1, c("white", "white")),
    fontWeight = styleInterval(1, c("normal", "normal")),
    color = styleInterval(1, c("black", "black"))
  ) |>
  formatCurrency(
    columns = 2:4,
    currency = "",
    digits = 0
  ) |>
   formatPercentage(
    columns = c(5,6),
    digits = 2
  ) |>
  formatStyle(
    columns = c("Difference", "% Difference"),  
    color = styleInterval(0, c("red", "green"))  
  )



```

Republicans overperformed in most counties, but especially Wayne County by 90K votes (45.48%).

```{r michigan_gop_table, echo = FALSE}
datatable(michigan_gop |> select(-c(`State Winner`)), 
          caption = htmltools::tags$caption(
            style = 'caption-side: top; font-size: 20px; font-weight: bold;', 
            ' Michigan GOP 2024 Performance by County'
          ),
          options = list(
            dom = 'tp', 
            order = list(list(6, "asc")),
            scrollX = TRUE, 
            columnDefs = list(list(targets = "_all", visible = TRUE)),
            pageLength = 10
          )
        )|>

 formatStyle(
    columns = 1:ncol(michigan_gop),
    background = styleInterval(1, c("white", "white")),
    fontWeight = styleInterval(1, c("normal", "normal")),
    color = styleInterval(1, c("black", "black"))
  ) |>
  formatCurrency(
    columns = 2:4,
    currency = "",
    digits = 0
  ) |>
   formatPercentage(
    columns = c(5,6),
    digits = 2
  ) |>
  formatStyle(
    columns = c("Difference", "% Difference"),  
    color = styleInterval(0, c("red", "green"))  
  )


```

Eaton County, Muskegon County, Grand Traverse County, and Saginaw County were all predicted to have a majority of Democratic votes, but actual turnout resulted in Republican victories. Saginaw County proved to be the most consequential miss with a swing of nearly 14K votes from predictions to actuals.

```{r michigan_scatterplot, echo = FALSE, message = FALSE, warning = FALSE}

plotly::ggplotly(
  ggplot(
    michigan_df, aes(x = margin_pred, y = margin_actual, color = state_winner)) +
    geom_point(aes(text = paste("County:", county_name, 
                                "<br>Actual Margin:", scales::comma(margin_actual), 
                                "<br>Predicted Margin:", scales::comma(margin_pred)))) +
  geom_vline(xintercept = 0, linetype = "dashed") + 
    geom_hline(yintercept = 0, linetype = "dashed") +
    scale_color_manual(values = c("DEM" = "blue", "GOP" = "red")) +
    scale_x_continuous(labels = label_number(scale = 1e-3, suffix = "K")) +
    scale_y_continuous(labels = label_number(scale = 1e-3, suffix = "K")) +
    xlab('Predicted Margin') + ylab('Actual Margin') +
    labs(color = "State Winner") 

, tooltip = 'text') |>
  plotly::layout(
    title = list(text = "2024 Michigan Actuals vs. Predicted Vote Margin by County",  x = 0.5, xanchor = "center"),
    legend = list(orientation = "h", x = 0.5, xanchor = "center", y = -0.2))
```

```{r nevada_counties, include = FALSE}

nevada_df <- create_base_df('Nevada')
nevada_dem <- create_party_county_df('DEM', nevada_df)
nevada_gop <- create_party_county_df('GOP', nevada_df)

```

Clark County was the biggest Democratic miss with a difference between actuals and predictions of -131K (-20.16%).

```{r nevada_dem_table, echo = FALSE}

datatable(nevada_dem |> select(-c(`State Winner`)), 
          caption = htmltools::tags$caption(
            style = 'caption-side: top; font-size: 20px; font-weight: bold;', 
            ' Nevada DEM 2024 Performance by County'
          ),
          options = list(
            dom = 'tp', 
            order = list(list(6, "asc")),
            scrollX = TRUE, 
            columnDefs = list(list(targets = "_all", visible = TRUE)),
            pageLength = 10  
          )
        )|>

 formatStyle(
    columns = 1:ncol(nevada_dem),
    background = styleInterval(1, c("white", "white")),
    fontWeight = styleInterval(1, c("normal", "normal")),
    color = styleInterval(1, c("black", "black"))
  ) |>
  formatCurrency(
    columns = 2:4,
    currency = "",
    digits = 0
  ) |>
   formatPercentage(
    columns = c(5,6),
    digits = 2
  ) |>
  formatStyle(
    columns = c("Difference", "% Difference"),  
    color = styleInterval(0, c("red", "green"))  
  )

```

Clark County was the biggest Republican miss as well with a difference between actuals and predictions of -44K (-8.20%).

```{r nevada_gop_table, echo = FALSE}


datatable(nevada_gop |> select(-c(`State Winner`)), 
          caption = htmltools::tags$caption(
            style = 'caption-side: top; font-size: 20px; font-weight: bold;', 
            ' Nevada GOP 2024 Performance by County'
          ),
          options = list(
            dom = 'tp', 
            order = list(list(6, "asc")),
            scrollX = TRUE, 
            columnDefs = list(list(targets = "_all", visible = TRUE)),
            pageLength = 10 
          )
        )|>

 formatStyle(
    columns = 1:ncol(nevada_gop),
    background = styleInterval(1, c("white", "white")),
    fontWeight = styleInterval(1, c("normal", "normal")),
    color = styleInterval(1, c("black", "black"))
  ) |>
  formatCurrency(
    columns = 2:4,
    currency = "",
    digits = 0
  ) |>
   formatPercentage(
    columns = c(5,6),
    digits = 2
  ) |>
  formatStyle(
    columns = c("Difference", "% Difference"),  
    color = styleInterval(0, c("red", "green"))  
  )
```

The statewide call for Nevada predicted a Democratic victory, but actual turnout resulted in a Republican victory in the state. There were no unexpected counties that flipped parties from predictions to actuals.

```{r nevada_scatterplot, echo = FALSE, message = FALSE, warning = FALSE}

plotly::ggplotly(
  ggplot(
    nevada_df, aes(x = margin_pred, y = margin_actual, color = state_winner)) +
    geom_point(aes(text = paste("County:", county_name, 
                                "<br>Actual Margin:", scales::comma(margin_actual), 
                                "<br>Predicted Margin:", scales::comma(margin_pred)))) +
  geom_vline(xintercept = 0, linetype = "dashed") + 
    geom_hline(yintercept = 0, linetype = "dashed") +
    scale_color_manual(values = c("DEM" = "blue", "GOP" = "red")) +
    scale_x_continuous(labels = label_number(scale = 1e-3, suffix = "K")) +
    scale_y_continuous(labels = label_number(scale = 1e-3, suffix = "K")) +
    xlab('Predicted Margin') + ylab('Actual Margin') +
    labs(color = "State Winner") 

, tooltip = 'text') |>
  plotly::layout(
    title = list(text = "2024 Nevada Actuals vs. Predicted Vote Margin by County",  x = 0.5, xanchor = "center"),
    legend = list(orientation = "h", x = 0.5, xanchor = "center", y = -0.2))

```

```{r penn_counties, include = FALSE}

penn_df <- create_base_df('Pennsylvania')
penn_dem <- create_party_county_df('DEM', penn_df)
penn_gop <- create_party_county_df('GOP', penn_df)

```

While the statewide call for Pennsylvania resulted in a victory for Republicans, the largest vote gain from actuals to predictions for Democrats came from Allegheny County with a 48K difference (12.46%) followed by Philadelphia County with a difference of 37K (6.89%).

```{r penn_dem_table, echo = FALSE}
datatable(penn_dem |> select(-c(`State Winner`)), 
          caption = htmltools::tags$caption(
            style = 'caption-side: top; font-size: 20px; font-weight: bold;', 
            ' Pennsylvania DEM 2024 Performance by County'
          ),
          options = list(
            dom = 'tp', 
            order = list(list(6, "asc")),
            scrollX = TRUE, 
            columnDefs = list(list(targets = "_all", visible = TRUE)),
            pageLength = 10  
          )
        )|>

 formatStyle(
    columns = 1:ncol(penn_dem),
    background = styleInterval(1, c("white", "white")),
    fontWeight = styleInterval(1, c("normal", "normal")),
    color = styleInterval(1, c("black", "black"))
  ) |>
  formatCurrency(
    columns = 2:4,
    currency = "",
    digits = 0
  ) |>
   formatPercentage(
    columns = c(5,6),
    digits = 2
  ) |>
  formatStyle(
    columns = c("Difference", "% Difference"),  
    color = styleInterval(0, c("red", "green"))  
  )

```

Republicans were able to win Pennsylvania statewide in large part due to their overperforming in both Philadelphia County with 63K more votes than expected (76.96%) followed by Allegheny County with 48K more votes than expected (20.39%).

```{r penn_gop_table, echo = FALSE}
datatable(penn_gop |> select(-c(`State Winner`)), 
          caption = htmltools::tags$caption(
            style = 'caption-side: top; font-size: 20px; font-weight: bold;', 
            ' Pennsylvania GOP 2024 Performance by County'
          ),
          options = list(
            dom = 'tp', 
            order = list(list(6, "asc")),
            scrollX = TRUE, 
            columnDefs = list(list(targets = "_all", visible = TRUE)),
            pageLength = 10  
          )
        )|>

 formatStyle(
    columns = 1:ncol(penn_gop),
    background = styleInterval(1, c("white", "white")),
    fontWeight = styleInterval(1, c("normal", "normal")),
    color = styleInterval(1, c("black", "black"))
  ) |>
  formatCurrency(
    columns = 2:4,
    currency = "",
    digits = 0
  ) |>
   formatPercentage(
    columns = c(5,6),
    digits = 2
  ) |>
  formatStyle(
    columns = c("Difference", "% Difference"),  
    color = styleInterval(0, c("red", "green"))  
  )
```

Both Erie County and Monroe County were predicted to have a majority Democratic vote, but actual turnout resulted in a Republican victories.

```{r penn_scatterplot, echo = FALSE, message = FALSE, warning = FALSE}

plotly::ggplotly(
  ggplot(
    penn_df, aes(x = margin_pred, y = margin_actual, color = state_winner)) +
    geom_point(aes(text = paste("County:", county_name, 
                                "<br>Actual Margin:", scales::comma(margin_actual), 
                                "<br>Predicted Margin:", scales::comma(margin_pred)))) +
  geom_vline(xintercept = 0, linetype = "dashed") + 
    geom_hline(yintercept = 0, linetype = "dashed") +
    scale_color_manual(values = c("DEM" = "blue", "GOP" = "red")) +
    scale_x_continuous(labels = label_number(scale = 1e-3, suffix = "K")) +
    scale_y_continuous(labels = label_number(scale = 1e-3, suffix = "K")) +
    xlab('Predicted Margin') + ylab('Actual Margin') +
    labs(color = "State Winner") 

, tooltip = 'text') |>
  plotly::layout(
    title = list(text = "2024 Pennsylvania Actuals vs. Predicted Vote Margin by County",  x = 0.5, xanchor = "center"),
    legend = list(orientation = "h", x = 0.5, xanchor = "center", y = -0.2))

```

```{r wisconsin_counties, include = FALSE}

wisconsin_df <- create_base_df('Wisconsin')
wisconsin_dem <- create_party_county_df('DEM', wisconsin_df)
wisconsin_gop <- create_party_county_df('GOP', wisconsin_df)

```

Democratics underperformed the prediction in Dane County by -20K (-6.83%).

```{r wisconsin_dem_table, echo = FALSE}

datatable(wisconsin_dem |> select(-c(`State Winner`)), 
          caption = htmltools::tags$caption(
            style = 'caption-side: top; font-size: 20px; font-weight: bold;', 
            ' Wisconsin DEM 2024 Performance by County'
          ),
          options = list(
            dom = 'tp', 
            order = list(list(6, "asc")),
            scrollX = TRUE, 
            columnDefs = list(list(targets = "_all", visible = TRUE)),
            pageLength = 10
          )
        )|>

 formatStyle(
    columns = 1:ncol(wisconsin_dem),
    background = styleInterval(1, c("white", "white")),
    fontWeight = styleInterval(1, c("normal", "normal")),
    color = styleInterval(1, c("black", "black"))
  ) |>
  formatCurrency(
    columns = 2:4,
    currency = "",
    digits = 0
  ) |>
   formatPercentage(
    columns = c(5,6),
    digits = 2
  ) |>
  formatStyle(
    columns = c("Difference", "% Difference"),  
    color = styleInterval(0, c("red", "green"))  
  )


```

While Republicans underperformed their predictions in Washington County by -7K (-10.55%), most of the other counties in which they also underperformed were only by small margins under -5%. Their largest vote gain from actuals to predictions came from Rock County with a difference of 5K (15.16%).

```{r wisconsin_gop_table, echo = FALSE}
datatable(wisconsin_gop |> select(-c(`State Winner`)), 
          caption = htmltools::tags$caption(
            style = 'caption-side: top; font-size: 20px; font-weight: bold;', 
            ' Wisconsin GOP 2024 Performance by County'
          ),
          options = list(
            dom = 'tp', 
            order = list(list(6, "asc")),
            scrollX = TRUE, 
            columnDefs = list(list(targets = "_all", visible = TRUE)),
            pageLength = 10  
          )
        )|>

 formatStyle(
    columns = 1:ncol(wisconsin_gop),
    background = styleInterval(1, c("white", "white")),
    fontWeight = styleInterval(1, c("normal", "normal")),
    color = styleInterval(1, c("black", "black"))
  ) |>
  formatCurrency(
    columns = 2:4,
    currency = "",
    digits = 0
  ) |>
   formatPercentage(
    columns = c(5,6),
    digits = 2
  ) |>
  formatStyle(
    columns = c("Difference", "% Difference"),  
    color = styleInterval(0, c("red", "green"))  
  )

```

Each party picked up 1 unexpected county: Portage County was predicted to have a majority Republican vote, but actual turnout resulted in a Democratic victory. Conversely, Sauk County was predicted to have a majority Democratic vote, but actual turnout resulted in a Republican victory. Neither county was consequential in the outcome of the statewide vote.

```{r wisconsin_scatterplot, echo = FALSE, message = FALSE, warning = FALSE}

plotly::ggplotly(
  ggplot(
    wisconsin_df, aes(x = margin_pred, y = margin_actual, color = state_winner)) +
    geom_point(aes(text = paste("County:", county_name, 
                                "<br>Actual Margin:", scales::comma(margin_actual), 
                                "<br>Predicted Margin:", scales::comma(margin_pred)))) +
  geom_vline(xintercept = 0, linetype = "dashed") + 
    geom_hline(yintercept = 0, linetype = "dashed") +
    scale_color_manual(values = c("DEM" = "blue", "GOP" = "red")) +
    ggtitle('2024 Actuals vs. Predicted Vote Margin')  +
    scale_x_continuous(labels = label_number(scale = 1e-3, suffix = "K")) +
    scale_y_continuous(labels = label_number(scale = 1e-3, suffix = "K")) +
    xlab('Predicted Margin') + ylab('Actual Margin') +
    labs(color = "State Winner") 

, tooltip = 'text') |>
  plotly::layout(
    title = list(text = "2024 Wisconsin Actuals vs. Predicted Vote Margin by County",  x = 0.5, xanchor = "center"),
    legend = list(orientation = "h", x = 0.5, xanchor = "center", y = -0.2))

```

```{r test, echo=FALSE, include = FALSE}

plotly::ggplotly(
  ggplot(
    arizona_df, aes(x = margin_actual, y = margin_pred, color = state_winner)) +
    geom_point(
      aes(
        size = margin_perc_diff,
        text = paste("County:", county_name, 
                     "<br>Actual Margin:", scales::comma(margin_actual), 
                     "<br>Predicted Margin:", scales::comma(margin_pred)),
      )
    ) +
  geom_vline(xintercept = 0, linetype = "dashed") + 
    geom_hline(yintercept = 0, linetype = "dashed") +
    scale_color_manual(values = c("DEM" = "blue", "GOP" = "red")) +
    scale_x_continuous(labels = label_number(scale = 1e-3, suffix = "K")) +
    scale_y_continuous(labels = label_number(scale = 1e-3, suffix = "K")) +
    xlab('DEM Votes') + ylab('GOP Votes') +
    labs(color = "State Winner") 

, tooltip = 'text') |>
  plotly::layout(
    title = list(text = "2024 Arizona Actual vs. Predicted Vote Margin by County",  x = 0.5, xanchor = "center"),
    legend = list(orientation = "h", x = 0.5, xanchor = "center", y = -0.2))

```
